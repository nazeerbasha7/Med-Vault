import React, { useState } from 'react';import { DEPLOYMENT_CONFIG } from '../../utils/deployment';const Verify: React.FC = () => {  const [recordId, setRecordId] = useState('');  const [verificationResult, setVerificationResult] = useState<any>(null);  const [loading, setLoading] = useState(false);  const handleVerification = async () => {    if (!recordId.trim()) {      alert('Please enter a Record ID');      return;    }        setLoading(true);    setVerificationResult(null);        try {      const cleanHash = recordId.startsWith('0x') ? recordId : `0x${recordId}`;      const response = await fetch(`${DEPLOYMENT_CONFIG.NODE_URL}/transactions/by_hash/${cleanHash}`);            if (response.ok) {        const txData = await response.json();        const isMedVaultTx = txData.payload?.function?.includes('medvault') ||                              txData.payload?.function?.includes(DEPLOYMENT_CONFIG.MODULE_ADDRESS);                setVerificationResult({          isValid: response.status === 200 && txData.success,          isMedVault: isMedVaultTx,          transactionHash: cleanHash,          timestamp: txData.timestamp,          success: txData.success,          sender: txData.sender        });      } else {        setVerificationResult({          isValid: false,          error: 'Transaction not found on blockchain',          transactionHash: cleanHash        });      }    } catch (error: any) {      setVerificationResult({        isValid: false,        error: `Verification failed: ${error.message}`,        transactionHash: recordId      });    } finally {      setLoading(false);    }  };  return (    <div style={{ padding: '20px', backgroundColor: '#f5f5f5', minHeight: '100vh' }}>      <div style={{ maxWidth: '800px', margin: '0 auto' }}>        <div style={{ textAlign: 'center', marginBottom: '40px' }}>          <h1 style={{ fontSize: '32px', fontWeight: 'bold', color: '#333', marginBottom: '10px' }}>            üîê Medical Record Verification          </h1>          <p style={{ fontSize: '16px', color: '#666' }}>            Verify medical records on the Aptos blockchain          </p>        </div>        <div style={{ backgroundColor: 'white', borderRadius: '8px', padding: '30px', boxShadow: '0 2px 10px rgba(0,0,0,0.1)', marginBottom: '20px' }}>          <h2 style={{ fontSize: '24px', fontWeight: 'bold', marginBottom: '20px', color: '#333' }}>            üîç Verify Medical Record          </h2>                    <div style={{ marginBottom: '20px' }}>            <label style={{ display: 'block', fontWeight: 'bold', marginBottom: '8px', color: '#333' }}>              Record ID (Transaction Hash)            </label>            <input              type="text"              value={recordId}              onChange={(e) => setRecordId(e.target.value)}              placeholder="Enter transaction hash (0x...)"              style={{                width: '100%',                padding: '12px',                border: '2px solid #e1e5e9',                borderRadius: '6px',                fontSize: '16px',                fontFamily: 'monospace'              }}            />          </div>          <button            onClick={handleVerification}            disabled={loading || !recordId.trim()}            style={{              padding: '12px 30px',              backgroundColor: loading || !recordId.trim() ? '#ccc' : '#1890ff',              color: 'white',              border: 'none',              borderRadius: '6px',              fontSize: '16px',              fontWeight: 'bold',              cursor: loading || !recordId.trim() ? 'not-allowed' : 'pointer',              width: '100%'            }}          >            {loading ? 'üîÑ Verifying...' : 'üîç Verify Record'}          </button>        </div>        {verificationResult && (          <div style={{ backgroundColor: 'white', borderRadius: '8px', padding: '30px', boxShadow: '0 2px 10px rgba(0,0,0,0.1)' }}>            <h3 style={{ fontSize: '20px', fontWeight: 'bold', marginBottom: '20px', color: '#333' }}>              Verification Results            </h3>                        {verificationResult.isValid ? (              <div>                <div style={{                   padding: '20px',                   backgroundColor: '#f6ffed',                   border: '2px solid #52c41a',                   borderRadius: '8px',                   marginBottom: '20px',                  textAlign: 'center'                }}>                  <div style={{ fontSize: '48px', marginBottom: '10px' }}>‚úÖ</div>                  <h4 style={{ fontSize: '24px', color: '#52c41a', fontWeight: 'bold', margin: 0 }}>                    VERIFIED                  </h4>                  <p style={{ color: '#389e0d', margin: '10px 0 0 0' }}>                    This medical record exists on the blockchain and is authentic                  </p>                </div>                <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))', gap: '15px' }}>                  <div style={{ padding: '15px', backgroundColor: '#f0f8ff', borderRadius: '6px' }}>                    <div style={{ fontWeight: 'bold', color: '#1890ff' }}>Blockchain Status</div>                    <div style={{ color: '#52c41a' }}>‚úÖ Confirmed</div>                  </div>                                    {verificationResult.isMedVault && (                    <div style={{ padding: '15px', backgroundColor: '#f9f0ff', borderRadius: '6px' }}>                      <div style={{ fontWeight: 'bold', color: '#722ed1' }}>MedVault Record</div>                      <div style={{ color: '#52c41a' }}>‚úÖ Verified</div>                    </div>                  )}                                    <div style={{ padding: '15px', backgroundColor: '#fff7e6', borderRadius: '6px' }}>                    <div style={{ fontWeight: 'bold', color: '#fa8c16' }}>Transaction</div>                    <div style={{ color: '#52c41a' }}>‚úÖ Success</div>                  </div>                </div>                {verificationResult.sender && (                  <div style={{ marginTop: '20px', padding: '15px', backgroundColor: '#fafafa', borderRadius: '6px' }}>                    <div style={{ fontWeight: 'bold', marginBottom: '10px' }}>Transaction Details:</div>                    <div style={{ fontSize: '14px', color: '#666', fontFamily: 'monospace' }}>                      <div>Hash: {verificationResult.transactionHash}</div>                      <div>From: {verificationResult.sender}</div>                      {verificationResult.timestamp && <div>Time: {new Date(parseInt(verificationResult.timestamp) / 1000).toLocaleString()}</div>}                    </div>                  </div>                )}              </div>            ) : (              <div>                <div style={{                   padding: '20px',                   backgroundColor: '#fff2f0',                   border: '2px solid #ff4d4f',                   borderRadius: '8px',                  textAlign: 'center'                }}>                  <div style={{ fontSize: '48px', marginBottom: '10px' }}>‚ùå</div>                  <h4 style={{ fontSize: '24px', color: '#ff4d4f', fontWeight: 'bold', margin: 0 }}>                    NOT VERIFIED                  </h4>                  <p style={{ color: '#cf1322', margin: '10px 0 0 0' }}>                    {verificationResult.error || 'Record could not be verified on the blockchain'}                  </p>                </div>              </div>            )}          </div>        )}      </div>    </div>  );};export default Verify;